name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: ubuntu-latest
    strategy:
      matrix:
        BUILD_TYPE: [Release, Debug]
        BUILD_PLATFORM: [x64, x86]
    steps:
    - uses: actions/checkout@v3

    name: Submodules
      run: |
        git submodule update --init --recursive
        sudo apt update && sudo apt install -y libconfig-dev
        sudo cp libfwlib32-linux-x64.so.1.0.5 /usr/local/lib/libfwlib32.so
        sudo ldconfig
        
    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{matrix.BUILD_TYPE}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{matrix.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{matrix.BUILD_TYPE}}
